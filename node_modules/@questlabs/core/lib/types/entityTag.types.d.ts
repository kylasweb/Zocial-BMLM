import { ICommonResponse } from "./common.types";
export interface EntityTag {
    tagId: string;
    entityId: string;
    tagName?: string;
    description?: string;
    tagUsers?: string[];
    isPrivate?: boolean;
    isEnabled?: boolean;
    createdAt: Date;
}
export interface IGetAllTagsForEntity {
    entityId?: string;
}
export interface IGetAllTagsForEntityResponse extends ICommonResponse {
    data: {
        tagId: string;
        tagName?: string;
        description?: string;
        tagUsers?: string[];
        isPrivate?: boolean;
    }[];
}
export interface IAddTagForEntity {
    tagName: string;
    description: string;
    entityId?: string;
}
export interface IAddTagForEntityResponse {
    data: EntityTag;
}
export interface IUpdateTagForEntity {
    tagId: string;
    tagName?: string;
    description?: string;
    entityId?: string;
}
export interface IUpdateTagForEntityResponse extends ICommonResponse {
    data: EntityTag;
}
export interface IDeleteTagForEntity {
    tagId: string;
    entityId?: string;
}
export interface IDeleteTagForEntityResponse extends ICommonResponse {
}
export interface IGetEntityTagsForUser {
    entityId?: string;
    forUserId?: string;
}
export interface IGetEntityTagsForUserResponse extends ICommonResponse {
    data: {
        tagId: string;
        tagName?: string;
        description?: string;
        isPrivate?: boolean;
    }[];
}
export interface IAddEntityTagForUser {
    tagId: string;
    entityId?: string;
    forUserId?: string;
}
export interface IAddEntityTagForUserResponse {
    data: EntityTag;
}
export interface IRemoveEntityTagForUser extends IAddEntityTagForUser {
}
export interface IRemoveEntityTagForUserResponse extends ICommonResponse {
}
