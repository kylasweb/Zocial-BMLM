import { ICommonResponse } from "./common.types";
export interface DappMetric {
    metric: string;
    entityId: string;
    type?: string;
    name?: string;
    description?: string;
    thresholdTime: number;
    isEnabled: boolean;
    createdAt: Date;
    eventName?: string;
    platform?: string;
}
export interface ShortDappMetric {
    id: string;
    name: string;
    description: string;
    time: Date;
    platform: string;
    eventName: string;
}
export interface DappMetricUser {
    userId: string;
    entityId: string;
    metric: string;
    counter: number;
    createdAt: Date;
    lastIncrementedAt: Date;
}
export interface ShortDappMetricUser {
    metric: string;
    counter: number;
}
export interface ICreateDappMetrics {
    metric: string;
    entityId?: string;
    name?: string;
    description?: string;
    type?: string;
    eventName?: string;
    platform?: string;
    thresholdTime?: number;
}
export interface ICreateDappMetricsResponse extends ICommonResponse {
    data: DappMetric;
}
export interface IDeleteDappMetrics {
    metric: string;
    entityId?: string;
}
export interface IDeleteDappMetricsResponse extends ICommonResponse {
}
export interface IEditDappMetrics extends ICreateDappMetrics {
}
export interface IEditDappMetricsResponse extends ICommonResponse {
}
export interface IGetAllDappMetrics {
    entityId?: string;
    type?: string;
}
export interface IGetAllDappMetricsResponse extends ICommonResponse {
    data: ShortDappMetric[];
}
export interface IGetDappMetricForUser {
    metric: string;
    entityId?: string;
    forUserId?: string;
}
export interface IGetDappMetricForUserResponse extends ICommonResponse {
    data: ShortDappMetricUser;
}
export interface IIncrementDappMetricForUser extends IDeleteDappMetrics {
    count: number;
    forUserId?: string;
}
export interface IIncrementDappMetricForUserResponse extends ICommonResponse {
}
export interface IGetAllDappMetricsForUser {
    entityId?: string;
    forUserId?: string;
}
export interface IGetAllDappMetricsForUserResponse extends ICommonResponse {
    data: {
        id: string;
        count: number;
    }[];
}
export interface IIncrementMultipleMetricsForUser {
    entityId?: string;
    metrics: {
        metric: string;
        count: number;
    }[];
    forUserId?: string;
}
export interface IIncrementMultipleMetricsForUserResponse extends ICommonResponse {
}
