import { ICommonResponse } from "./common.types";
interface validationRules {
    type?: string;
    required?: Boolean;
    unique?: Boolean;
    nonnull?: Boolean;
    minLength?: number;
    maxLength?: number;
    enum?: [string];
    regex?: string;
    min?: number;
    max?: number;
}
interface field {
    name?: string;
    description?: string;
    validationRules: validationRules;
}
export interface IAddNewDataContractForEntity {
    name?: string;
    description?: string;
    entityId?: string;
    source?: string;
    fields?: Array<field>;
    tags?: Array<string>;
}
export interface IAddNewDataContractForEntityResponse extends ICommonResponse {
    datasetId?: string;
}
export interface IGetDataContractByIdForAnEntity {
    entityId?: string;
    dataContractId?: string;
}
export interface IGetDataContractByIdForAnEntityResponse extends IAddNewDataContractForEntity {
    createdAt?: string;
    updatedAt?: string;
    _id?: string;
}
export interface IGetAllDataContractsForAnEntity {
    entityId?: string;
}
export interface IGetAllDataContractsForAnEntityResponse extends ICommonResponse {
    data?: Array<IGetDataContractByIdForAnEntityResponse>;
}
export interface IUpdateDataContractForEntity extends IAddNewDataContractForEntity {
}
export interface IUpdateDataContractForEntityResponse extends ICommonResponse {
}
export interface IDeleteDataContractForEntity extends IGetDataContractByIdForAnEntity {
}
export interface IDeleteDataContractForEntityResponse extends ICommonResponse {
}
export interface IFetchFieldsFromGoogleSheets {
    entityId?: string;
    googleSheetLink?: string;
}
export interface IFetchFieldsFromGoogleSheetsResponse extends IAddNewDataContractForEntityResponse {
}
export interface IAutoGenerateDescription {
    dataContractId?: string;
    entityId?: string;
    fields?: IAddNewDataContractForEntity;
}
export interface IAutoGenerateDescriptionResponse extends ICommonResponse {
    res?: Array<string>;
}
export interface IChatWithDataContractForEntity extends IGetDataContractByIdForAnEntity {
    userInput?: string;
    isInternal?: boolean;
}
export interface IChatWithDataContractForEntityResponse extends ICommonResponse {
    data?: string;
}
export {};
