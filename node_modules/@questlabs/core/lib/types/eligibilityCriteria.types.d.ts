export type EligibilityCriteriaFrequency = "ONCE" | "DAILY" | "WEEKLY" | "MONTHLY";
export type EligibilityCriteriaEffort = "E1" | "E2" | "E3" | "E4" | "E5";
export type EligibilityCriteriaImportance = "I1" | "I2" | "I3" | "I4" | "I5";
export type EligibilityCriteriaType = "NONE" | "TWITTER_FOLLOW_ACCOUNT" | "TWITTER_LIKE_POST" | "TWITTER_COMMENT_POST" | "TWITTER_RETWEET_POST" | "TWITTER_JOIN_SPACE" | "DISCORD_JOIN_GUILD" | "DISCORD_ASSIGNED_ROLE" | "LINK_OPEN_READ" | "CONTRACT_MIN_OWNERSHIP" | "DAPP_METRIC_THRESHOLD" | "DAPP_STREAK_THRESHOLD" | "USER_INPUT_TEXT" | "USER_INPUT_SINGLE_CHOICE" | "USER_INPUT_MULTI_CHOICE" | "USER_INPUT_DATE" | "TELEGRAM_JOIN_CHANNEL" | "SNAPSHOT_JOIN_SPACE" | "SNAPSHOT_VOTE_PROPOSAL" | "INSTAGRAM_FOLLOW_ACCOUNT" | "INSTAGRAM_LIKE_POST" | "INSTAGRAM_COMMENT_POST" | "MEDIUM_FOLLOW_ACCOUNT" | "MEDIUM_LIKE_POST" | "FACEBOOK_FOLLOW_PAGE" | "LINKEDIN_FOLLOW_PAGE";
export interface EligibilityCriteria {
    criteriaId: string;
    questId: string;
    label?: string;
    xp?: number;
    dependentCriterias?: any[];
    requiresApproval?: boolean;
    frequency?: EligibilityCriteriaFrequency;
    metadata?: Record<string, any>;
    criteriaType: EligibilityCriteriaType;
    createdAt: Date;
}
interface CommonCreateCriteria {
    effort: EligibilityCriteriaEffort;
    importance: EligibilityCriteriaImportance;
    xp: number;
    frequency: EligibilityCriteriaFrequency;
}
export interface ICreateQuestEligibilityCriteria {
    type: EligibilityCriteriaType;
    data: Record<string, any>;
    source?: string;
    label?: string;
    extraData?: Record<string, any>;
}
export interface ICreateUserInputText extends CommonCreateCriteria {
    title: string;
}
export interface ICreateUserInputSingleChoice extends CommonCreateCriteria {
    title: string;
    options: string[];
}
export interface ICreateUserInputMultiChoice extends ICreateUserInputSingleChoice {
}
export interface ICreateUserInputDate extends CommonCreateCriteria {
    title: string;
}
export interface ICreateUserEventMetric extends CommonCreateCriteria {
    metric: string;
    metricName: string;
    title: string;
    metricCount: number;
}
export interface ICreateUserEventStreak extends CommonCreateCriteria {
    streak: string;
    streakName: string;
    title: string;
    streakCount: number;
}
export interface ICreateLink extends CommonCreateCriteria {
    linkActionName: string;
    linkActionUrl: string;
}
export interface ICreateDiscordJoinServer extends CommonCreateCriteria {
    discordInviteLink: string;
    serverId: string;
    serverName: string;
}
export interface ICreateTwitterFollow extends CommonCreateCriteria {
    twitterUsername: string;
}
export interface ICreateTwitterLike extends CommonCreateCriteria {
    twitterPostURL: string;
}
export interface ICreateCustomCriteria {
    type: EligibilityCriteriaType;
    source?: string;
    data: Record<string, any>;
}
export interface IUpdateQuestEligibilityCriteria extends ICreateQuestEligibilityCriteria {
    id?: string;
}
export {};
