import { ICommonResponse } from "./common.types";
export interface EntityGemContract {
    _id: string;
    entityId: string;
    name: string;
    source: string;
    initialDefaultValue: Number;
    isDeleted: boolean;
    createdAt: Date;
    modifiedAt: Date;
    desc?: string;
    logo?: string;
}
export interface UserGemsMapping {
    userId: string;
    entityId: string;
    gemsContractId: string;
    value: number;
}
export interface IGetAllEntityGemsContracts {
    entityId?: string;
}
export interface IGetAllEntityGemsContractsResponse extends ICommonResponse {
    data: EntityGemContract[];
}
export interface IGetEntityGemContractById {
    entityId?: string;
    entityGemsContractId: string;
}
export interface IAddNewEntityGemsContractForEntity {
    entityId?: string;
    name: string;
    source: string;
    initialDefaultValue: Number;
    logo?: string;
    desc?: string;
}
export interface IAddNewEntityGemsContractForEntityResponse extends ICommonResponse {
    data: EntityGemContract;
}
export interface IGetEntityGemContractByIdResponse extends ICommonResponse {
    data: EntityGemContract;
}
export interface IUpdateEntityGemsContractForEntity {
    entityId?: string;
    entityGemsContractId: string;
    name?: string;
    source?: string;
    desc?: string;
    logo?: string;
    initialDefaultValue?: number;
}
export interface IUpdateEntityGemsContractForEntityResponse extends ICommonResponse {
    data: EntityGemContract;
}
export interface ISoftDeleteEntityGemsContractForEntity {
    entityId?: string;
    entityGemsContractId: string;
}
export interface ISoftDeleteEntityGemsContractForEntityResponse extends ICommonResponse {
    data: EntityGemContract;
}
export interface IGetAllEntityGemsForAUser {
    entityId?: string;
    userId?: string;
}
export interface IGetAllEntityGemsForAUserResponse extends ICommonResponse {
    data: {
        userId: string;
        entityId: string;
        value: number;
        gemsContractId: {
            name: string;
            desc?: string;
            logo?: string;
        };
    }[];
}
export interface IIncreaseEntityGemForAUser {
    entityGemsContractId: string;
    value: number;
    entityId?: string;
    userId?: string;
}
export interface IIncreaseEntityGemForAUserResponse extends ICommonResponse {
    data: UserGemsMapping;
}
export interface IDecreaseEntityGemForAUser {
    entityId?: string;
    userId?: string;
    entityGemsContractId: string;
    value: number;
}
export interface IDecreaseEntityGemForAUserResponse extends ICommonResponse {
    data: UserGemsMapping;
}
