import { ICreateCustomCriteria, ICreateDiscordJoinServer, ICreateLink, ICreateQuestEligibilityCriteria, ICreateTwitterFollow, ICreateTwitterLike, ICreateUserEventMetric, ICreateUserEventStreak, ICreateUserInputDate, ICreateUserInputMultiChoice, ICreateUserInputSingleChoice, ICreateUserInputText } from "../../types/eligibilityCriteria.types";
export declare class EligibilityCriteria {
    createUserInputText({ title, xp, frequency, effort, importance, }: ICreateUserInputText): ICreateQuestEligibilityCriteria;
    createUserInputSingleChoice({ title, options, effort, importance, xp, frequency, }: ICreateUserInputSingleChoice): ICreateQuestEligibilityCriteria;
    createUserInputMultiChoice({ title, options, effort, importance, xp, frequency, }: ICreateUserInputMultiChoice): ICreateQuestEligibilityCriteria;
    createUserInputDate({ title, effort, importance, xp, frequency, }: ICreateUserInputDate): ICreateQuestEligibilityCriteria;
    createUserEventMetric({ metric, metricName, metricCount, title, effort, importance, xp, frequency, }: ICreateUserEventMetric): ICreateQuestEligibilityCriteria;
    createUserEventStreak({ streak, streakCount, streakName, title, xp, frequency, effort, importance, }: ICreateUserEventStreak): ICreateQuestEligibilityCriteria;
    createLink({ linkActionName, linkActionUrl, effort, importance, xp, frequency, }: ICreateLink): ICreateQuestEligibilityCriteria;
    createDiscordJoinServer({ discordInviteLink, serverId, serverName, effort, importance, xp, frequency, }: ICreateDiscordJoinServer): ICreateQuestEligibilityCriteria;
    createTwitterFollow({ twitterUsername, effort, importance, frequency, xp, }: ICreateTwitterFollow): ICreateQuestEligibilityCriteria;
    createTwitterLike({ twitterPostURL, effort, importance, xp, frequency, }: ICreateTwitterLike): ICreateQuestEligibilityCriteria;
    createCustomCriteria({ type, source, data }: ICreateCustomCriteria): ICreateQuestEligibilityCriteria;
    verifyUserInputText(criteriaId: string, answer: string): {
        criteriaId: string;
        answer: string[];
    };
    verifyUserInputSingleChoice(criteriaId: string, answer: string): {
        criteriaId: string;
        answer: string[];
    };
    verifyUserInputMultipleChoice(criteriaId: string, answers: string[]): {
        criteriaId: string;
        answer: string[];
    };
    verifyUserInputDate(criteriaId: string, date: string): {
        criteriaId: string;
        answer: string[];
    };
    verifyLink(criteriaId: string): {
        criteriaId: string;
    };
    verifyTwitterFollowAccount(criteriaId: string): {
        criteriaId: string;
    };
    verifyTwitterLikePost(criteriaId: string): {
        criteriaId: string;
    };
    verifyDiscordJoinServer(criteriaId: string): {
        criteriaId: string;
    };
}
