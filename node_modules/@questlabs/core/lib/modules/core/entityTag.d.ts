import QuestSdk from "../..";
import { IGetRequestOptions, IPostRequestOptions } from "../../types/common.types";
import { IAddEntityTagForUser, IAddEntityTagForUserResponse, IAddTagForEntity, IAddTagForEntityResponse, IDeleteTagForEntity, IDeleteTagForEntityResponse, IGetAllTagsForEntity, IGetAllTagsForEntityResponse, IGetEntityTagsForUser, IGetEntityTagsForUserResponse, IRemoveEntityTagForUser, IRemoveEntityTagForUserResponse, IUpdateTagForEntity, IUpdateTagForEntityResponse } from "../../types/entityTag.types";
export declare class EntityTag {
    questSdk: QuestSdk;
    constructor(questSdk: QuestSdk);
    getAllTagsForEntity({ entityId }?: IGetAllTagsForEntity, options?: IGetRequestOptions): Promise<IGetAllTagsForEntityResponse>;
    addTagForEntity({ tagName, description, entityId }: IAddTagForEntity, options?: IPostRequestOptions): Promise<IAddTagForEntityResponse>;
    updateTagForEntity({ tagId, tagName, description, entityId }: IUpdateTagForEntity, options?: IPostRequestOptions): Promise<IUpdateTagForEntityResponse>;
    deleteTagForEntity({ tagId, entityId }: IDeleteTagForEntity, options?: IPostRequestOptions): Promise<IDeleteTagForEntityResponse>;
    getEntityTagsForUser({ entityId, forUserId }?: IGetEntityTagsForUser, options?: IGetRequestOptions): Promise<IGetEntityTagsForUserResponse>;
    addEntityTagForUser({ tagId, forUserId, entityId }: IAddEntityTagForUser, options?: IPostRequestOptions): Promise<IAddEntityTagForUserResponse>;
    removeEntityTagForUser({ tagId, forUserId, entityId }: IRemoveEntityTagForUser, options?: IPostRequestOptions): Promise<IRemoveEntityTagForUserResponse>;
}
