import QuestSdk from "../../";
import { IGetRequestOptions, IPostRequestOptions } from "../../types/common.types";
import { IAddNewDataContractForEntity, IAddNewDataContractForEntityResponse, IAutoGenerateDescription, IAutoGenerateDescriptionResponse, IChatWithDataContractForEntity, IChatWithDataContractForEntityResponse, IDeleteDataContractForEntity, IDeleteDataContractForEntityResponse, IFetchFieldsFromGoogleSheets, IFetchFieldsFromGoogleSheetsResponse, IGetAllDataContractsForAnEntity, IGetAllDataContractsForAnEntityResponse, IGetDataContractByIdForAnEntity, IGetDataContractByIdForAnEntityResponse, IUpdateDataContractForEntity, IUpdateDataContractForEntityResponse } from "../../types/entityDataContract.types";
export declare class EntityDataContract {
    questSdk: QuestSdk;
    constructor(questSdk: QuestSdk);
    addNewDataContractForEntity({ entityId, fields, source, name, tags, description }?: IAddNewDataContractForEntity, options?: IPostRequestOptions): Promise<IAddNewDataContractForEntityResponse>;
    getDataContractByIdForAnEntity({ entityId, dataContractId }?: IGetDataContractByIdForAnEntity, options?: IGetRequestOptions): Promise<IGetDataContractByIdForAnEntityResponse>;
    getAllDataContractsForAnEntity({ entityId }: IGetAllDataContractsForAnEntity, options?: IGetRequestOptions): Promise<IGetAllDataContractsForAnEntityResponse>;
    updateDataContractForEntity({ entityId, fields, source, name, tags, description }?: IUpdateDataContractForEntity, options?: IPostRequestOptions): Promise<IUpdateDataContractForEntityResponse>;
    deleteDataContractForEntity({ entityId, dataContractId }?: IDeleteDataContractForEntity, options?: IPostRequestOptions): Promise<IDeleteDataContractForEntityResponse>;
    chatWithDataContractForEntity({ entityId, dataContractId, userInput, isInternal }?: IChatWithDataContractForEntity, options?: IPostRequestOptions): Promise<IChatWithDataContractForEntityResponse>;
    fetchFieldsFromGoogleSheets({ entityId, googleSheetLink }?: IFetchFieldsFromGoogleSheets, options?: IPostRequestOptions): Promise<IFetchFieldsFromGoogleSheetsResponse>;
    autoGenerateDescription({ fields, dataContractId, entityId }?: IAutoGenerateDescription, options?: IPostRequestOptions): Promise<IAutoGenerateDescriptionResponse>;
}
