import { default as React } from 'react';
import { GeneralFeedbackContentStyleConfig } from './GenralFb';
type optionType = "ContactUs" | "RequestFeature" | "ReportBug" | "GeneralFeedback";
interface Headers {
    heading?: string;
    subHeading?: string;
}
interface feedbackCompProps {
    userId?: string;
    token?: string;
    questId: string;
    answer?: any;
    setAnswer?: any;
    getAnswers?: any;
    btnTextColor?: string;
    contactUrl?: string;
    isOpen: boolean;
    onClose?: () => void;
    backgroundColor?: string;
    starColor?: string;
    starBorderColor?: string;
    Headers?: Headers[] | undefined;
    GeneralFeedback?: {
        heading?: string;
        description?: string;
        formHeading?: string;
        formDescription?: string;
        iconUrl?: string;
        styleConfig?: GeneralFeedbackContentStyleConfig;
    };
    ReportBug?: {
        heading?: string;
        description?: string;
        formHeading?: string;
        formDescription?: string;
        iconUrl?: string;
        styleConfig?: GeneralFeedbackContentStyleConfig;
    };
    RequestFeature?: {
        heading?: string;
        description?: string;
        formHeading?: string;
        formDescription?: string;
        iconUrl?: string;
        styleConfig?: GeneralFeedbackContentStyleConfig;
    };
    ContactUs?: {
        heading?: string;
        description?: string;
        iconUrl?: string;
    };
    tickBg?: string;
    ratingStyle?: "Star" | "Numbers" | "Smiles";
    uniqueUserId?: string;
    uniqueEmailId?: string;
    descriptions?: Record<optionType, string>;
    backBtn?: boolean;
    iconColor?: string;
    showFooter?: boolean;
    PrimaryButtonText?: string;
    SecondaryButtonText?: string;
    StarSize?: number;
    styleConfig?: {
        Form?: React.CSSProperties;
        Heading?: React.CSSProperties;
        Description?: React.CSSProperties;
        Input?: React.CSSProperties;
        Label?: React.CSSProperties;
        EmailError?: {
            text?: string;
            errorStyle?: React.CSSProperties;
        };
        TopBar?: React.CSSProperties;
        TextArea?: React.CSSProperties;
        PrimaryButton?: React.CSSProperties;
        SecondaryButton?: React.CSSProperties;
        Modal?: React.CSSProperties;
        Footer?: {
            FooterStyle?: React.CSSProperties;
            FooterTextStyle?: React.CSSProperties;
            FooterIcon?: React.CSSProperties;
            FooterText?: string;
            FooterLink?: string;
        };
        listHeading?: React.CSSProperties;
        listDescription?: React.CSSProperties;
        Card?: React.CSSProperties;
        Star?: {
            Style?: React.CSSProperties;
            PrimaryColor?: string;
            SecondaryColor?: string;
            Size?: number;
        };
        ScreenShot?: {
            BorderWidth?: string;
            BorderColor?: string;
            Background?: string;
            ScreenShotBackground?: string;
            CrosshairColor?: string;
        };
        listHover?: {
            background?: string;
            iconBackground?: string;
            iconColor?: string;
            Heading?: string;
            Description?: string;
            IconSize?: string;
            Icon?: React.CSSProperties;
            defaultIconBackground?: string;
        };
        ThanksPopup?: {
            Style?: React.CSSProperties;
            Heading?: React.CSSProperties;
            Description?: React.CSSProperties;
            ShowFooter?: boolean;
            Icon?: React.CSSProperties;
        };
    };
    variation?: string;
    entityAuthenticationToken?: string;
}
declare const FeedbackWorkflow: React.FC<feedbackCompProps>;
export default FeedbackWorkflow;
