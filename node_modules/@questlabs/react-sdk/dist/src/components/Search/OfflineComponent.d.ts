import { CSSProperties } from 'react';
type data = {
    text: string;
    icon: string;
    link: string;
    resultType?: "command" | "action" | undefined;
    description: string;
    longDescription?: string;
}[];
type BrandTheme = {
    accentColor?: string;
    background?: string;
    borderRadius?: string;
    primaryButton?: string;
    secondaryButton?: string;
    contentColor?: string;
    fontFamily?: string;
    logo?: string;
    primaryColor?: string;
    secondaryColor?: string;
    tertiaryColor?: string;
    titleColor?: string;
};
interface QuestThemeData {
    accentColor: string;
    theme: string;
    borderRadius: string;
    buttonColor: string;
    images: string[];
}
interface propType {
    data?: data;
    wholerScreen?: boolean;
    open?: boolean | "ON_CTRL_K_KEY";
    defaultResult?: data;
    defulatResultLength?: number;
    onSearch?: (str: string) => void;
    token?: string;
    userId?: string;
    questId?: string;
    placeholder?: string;
    icons?: Array<string>;
    sections?: boolean;
    buttonText?: string;
    searchDetails?: boolean;
    width?: string;
    onResultClick?: (link: string) => void;
    iconColor?: string;
    offlineFormatData: data;
    styleConfig?: {
        Form?: CSSProperties;
        Heading?: CSSProperties;
        Description?: CSSProperties;
        Input?: CSSProperties;
        Label?: CSSProperties;
        Footer?: {
            FooterStyle?: CSSProperties;
            FooterText?: CSSProperties;
            FooterIcon?: CSSProperties;
        };
        listHover?: {
            background?: string;
            iconBackground?: string;
            Heading?: string;
            Description?: string;
        };
        Topbar?: CSSProperties;
        CommandButton?: CSSProperties;
    };
    showFooter?: boolean;
    BrandTheme?: BrandTheme;
    QuestThemeData?: QuestThemeData;
    autoFocus?: boolean;
    footerText?: string;
    footerLink?: string;
}
export default function SearchOffline(prop: propType): JSX.Element;
export {};
