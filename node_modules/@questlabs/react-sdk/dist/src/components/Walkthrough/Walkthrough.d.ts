import { MultiRouteTourProps, MultiRouteTourRefProps } from 'multiroute-tour-navigator/lib/MultiRouteTour';
import { Align, HelperProps, Position, OverlayProps, Step } from 'tour-navigator/lib/TourNavigator/types';
import { CSSProperties } from 'react';
type StyleConfig = {
    Form?: CSSProperties;
    Background?: CSSProperties;
    Heading?: CSSProperties;
    Description?: CSSProperties;
    Footer?: CSSProperties;
    FirstButton?: CSSProperties;
    LastButton?: CSSProperties;
    Image?: CSSProperties;
    Overlay?: CSSProperties;
    Arrow?: CSSProperties;
    Highlighter?: CSSProperties;
};
interface WalkThroughProps extends Omit<MultiRouteTourProps, 'steps'> {
    tooltip?: boolean;
    hideArrow?: boolean;
    onComplete?: () => void;
    styleConfig?: StyleConfig;
    firstButtonText?: string | ((currentStepIndex: number) => string);
    lastButtonText?: string | ((currentStepIndex: number) => string);
    finalButtonText?: string | ((currentStepIndex: number) => string);
    handleFirstButtonClick?: (props: HelperProps) => void;
    handleLastButtonClick?: (props: HelperProps) => void;
    highlightStyle?: CSSProperties;
    highlightOpacity?: number;
    highlightStroke?: string;
    highlightStrokeWidth?: number;
    highlightStrokeDasharray?: number;
    isOnline?: boolean;
    variation?: string;
    campaignId?: string;
    userId?: string;
    token?: string;
    uniqueEmailId?: string;
    uniqueUserId?: string;
    steps?: Step[];
    footerText?: string;
    footerLink?: string;
}
declare const Walkthrough: import('react').ForwardRefExoticComponent<WalkThroughProps & import('react').RefAttributes<MultiRouteTourRefProps>>;
export default Walkthrough;
export type WalkthroughHelperProps = HelperProps;
export type WalkthroughOverlayProps = OverlayProps;
export { Align, Position };
