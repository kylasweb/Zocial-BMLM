import { default as React } from 'react';
interface Headers {
    heading: string;
    subHeading: string;
}
interface FeedbackProps {
    heading?: string;
    subHeading?: string;
    userId?: string;
    token?: string;
    questId?: string;
    btnColor?: string;
    bgColor?: string;
    btnTextColor?: string;
    textColor?: string;
    font?: string;
    supportUrl?: string;
    onSubmit?: () => void;
    delay?: number;
    crossLogoForInput?: boolean;
    onCancel?: Function;
    itemsPerPage?: number;
    iconColor?: string;
    ratingType?: string;
    uniqueEmailId?: string;
    uniqueUserId?: string;
    sections?: {
        heading?: string;
        subHeading?: string;
        button1Text?: string;
        button2Text?: string;
        placeholder?: string;
        showWordCount?: boolean;
        showTopBar?: boolean;
    }[];
    Headers?: Headers[] | Headers | undefined;
    styleConfig?: {
        Form?: React.CSSProperties;
        Heading?: React.CSSProperties;
        Description?: React.CSSProperties;
        Input?: React.CSSProperties;
        Label?: React.CSSProperties;
        TextArea?: React.CSSProperties;
        PrimaryButton?: React.CSSProperties;
        SecondaryButton?: React.CSSProperties;
        Modal?: React.CSSProperties;
        Footer?: {
            FooterStyle?: React.CSSProperties;
            FooterTextStyle?: React.CSSProperties;
            FooterIcon?: React.CSSProperties;
            FooterText?: string;
            FooterLink?: string;
        };
        TopBar?: React.CSSProperties;
        Rating?: {
            RatingContainer?: React.CSSProperties;
            SingleRating?: React.CSSProperties;
            RatingText?: React.CSSProperties;
            Hover?: React.CSSProperties;
            LeftRatingText?: string;
            RightRatingText?: string;
        };
        EmailError?: {
            text?: string;
            errorStyle?: React.CSSProperties;
        };
        MultiChoice?: {
            style?: React.CSSProperties;
            selectedStyle?: React.CSSProperties;
        };
    };
    showFooter?: boolean;
    variation?: string;
    questionSections?: number[][];
    entityAuthenticationToken?: string;
}
declare const Survey: React.FC<FeedbackProps>;
export default Survey;
