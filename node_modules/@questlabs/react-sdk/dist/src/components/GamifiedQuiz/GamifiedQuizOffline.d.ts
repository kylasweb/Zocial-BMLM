import { Dispatch, SetStateAction } from 'react';
interface Headers {
    heading?: string;
    subHeading?: string;
}
interface GamifiedQuizProps {
    offlineAnswer: any;
    setOfflineAnswer: any;
    userId: string;
    token: string;
    questId: string;
    uniqueUserId?: string;
    uniqueEmailId?: string;
    heading?: string;
    showFooter?: boolean;
    thanksPopUpFooter?: boolean;
    questionSections?: number[][];
    sectionSubHeading?: string[];
    sectionHeading?: string[];
    footerText?: string;
    feedbackContent?: {
        FeedbackHeading?: string;
        FeedbackDescription?: string;
    };
    styleConfig?: {
        Heading?: React.CSSProperties;
        Form?: React.CSSProperties;
        FormContainer?: React.CSSProperties;
        LabelColor?: React.CSSProperties;
        Input?: React.CSSProperties;
        IconColor?: React.CSSProperties;
        Question?: React.CSSProperties;
        SubHeading?: React.CSSProperties;
        TextArea?: React.CSSProperties;
        PrimaryButton?: React.CSSProperties;
        SecondaryButton?: React.CSSProperties;
        Modal?: React.CSSProperties;
        Footer?: React.CSSProperties;
        FooterText?: React.CSSProperties;
        ThanksPopup?: React.CSSProperties;
        ThanksPopupHeading?: React.CSSProperties;
        ThanksPopupDescription?: React.CSSProperties;
        ThanksPopUpFooter?: React.CSSProperties;
        ThanksPopUpGotoHome?: React.CSSProperties;
        OptionsSelectedColor?: React.CSSProperties;
        EmailError?: {
            text?: string;
            errorStyle?: React.CSSProperties;
        };
    };
    gamifiedQuiz?: boolean;
    setGamifiedQuiz: Dispatch<SetStateAction<boolean>>;
    functionOnSubmit?: any;
    questions?: number;
    setQuestions?: Dispatch<SetStateAction<number>> | undefined;
    questionsPerSection?: number;
    formDataOffline: FormData[] | [];
    isButtonDisabled?: boolean;
    Headers?: Headers[] | undefined;
    footerLink?: string;
}
interface FormData {
    type: string;
    question: string;
    options: Array<string>;
    criteriaId: string;
    required: boolean;
    placeholder: string;
    linkTitle: string;
    linkUrl: string;
    manualInput: string | boolean;
    preventFutureSelection?: boolean;
    preventPastSelection?: boolean;
}
declare const GamifiedQuizOffline: React.FC<GamifiedQuizProps>;
export default GamifiedQuizOffline;
