import { CSSProperties } from 'react';
type HeadingScreen = {
    heading: string;
    subHeading: string;
};
interface QuestLoginProps {
    userId?: string;
    token?: string;
    questId: string;
    uniqueUserId?: string;
    uniqueEmailId?: string;
    design?: Array<Array<number>> | undefined;
    headingScreen?: HeadingScreen | HeadingScreen[] | any;
    singleChoose?: "modal1" | "modal2" | "modal3";
    multiChoice?: "modal1" | "modal2";
    getAnswers: Function | undefined;
    answer: any;
    setAnswer: React.Dispatch<React.SetStateAction<any>>;
    customComponents?: React.JSX.Element;
    customComponentPositions?: number;
    progress?: string[];
    loadingTracker?: boolean;
    setLoading?: Function;
    Headers?: HeadingScreen | HeadingScreen[] | any;
    nextBtnText?: string;
    progressBarMultiLine?: boolean;
    controlBtnType?: "Arrow" | "Buttons";
    template?: "multi-question" | "single-question" | 'single-page';
    showFooter?: false | true;
    styleConfig?: {
        Form?: CSSProperties;
        Topbar?: CSSProperties;
        Heading?: CSSProperties;
        Description?: CSSProperties;
        Input?: CSSProperties;
        EmailError?: {
            text?: string;
            errorStyle?: CSSProperties;
        };
        Label?: CSSProperties;
        TextArea?: CSSProperties;
        PrimaryButton?: CSSProperties;
        SecondaryButton?: CSSProperties;
        SingleChoice?: {
            style?: CSSProperties;
            selectedStyle?: CSSProperties;
            hoverBackground?: string;
        };
        MultiChoice?: {
            style?: CSSProperties;
            selectedStyle?: CSSProperties;
            isLabel?: boolean;
        };
        ProgressBar?: {
            completeTabColor?: string;
            currentTabColor?: string;
            pendingTabColor?: string;
        };
        Footer?: {
            FooterStyle?: CSSProperties;
            FooterTextStyle?: CSSProperties;
            FooterIcon?: CSSProperties;
            FooterText?: string;
            FooterLink?: string;
        };
    };
    variation?: string;
    onPageChange?: Function;
}
declare function OnBoarding(props: QuestLoginProps): false | import("react/jsx-runtime").JSX.Element;
export default OnBoarding;
