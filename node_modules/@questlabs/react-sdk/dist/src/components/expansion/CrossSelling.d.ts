import { CSSProperties } from 'react';
type BrandTheme = {
    accentColor?: string;
    background?: string;
    borderRadius?: string;
    primaryButton?: string;
    secondaryButton?: string;
    contentColor?: string;
    fontFamily?: string;
    logo?: string;
    primaryColor?: string;
    secondaryColor?: string;
    tertiaryColor?: string;
    titleColor?: string;
};
interface QuestThemeData {
    accentColor: string;
    theme: string;
    borderRadius: string;
    buttonColor: string;
    images: string[];
}
export interface referProp {
    questId: string;
    headingColor?: string;
    userId: string;
    token: string;
    color?: string;
    bgColor?: string;
    heading?: string;
    description?: String;
    shareButtonText?: string;
    iconColor?: string;
    gradientBackground?: boolean;
    primaryHeading?: string;
    primaryDescription?: string;
    showDays?: boolean;
    expiryDate?: number;
    claimRewardHandler?: Function;
    backButtonTrigger?: Function;
    uniqueEmailId?: string;
    uniqueUserId?: string;
    BrandTheme?: BrandTheme;
    QuestThemeData?: QuestThemeData;
    isEmail?: boolean;
    Icon?: "gift" | "percentage";
    styleConfig?: {
        Form?: CSSProperties;
        BackgroundWrapper?: CSSProperties;
        Heading?: CSSProperties;
        Description?: CSSProperties;
        PrimaryButton?: CSSProperties;
        SecondaryButton?: CSSProperties;
        gradientHeading?: CSSProperties;
        gradientDescription?: CSSProperties;
        Input?: CSSProperties;
        Timer?: {
            primaryColor?: string;
            secondaryColor?: string;
            backgroundColor?: string;
            TimerCard?: CSSProperties;
        };
        Footer?: {
            FooterStyle?: CSSProperties;
            FooterTextStyle?: CSSProperties;
            FooterText?: string;
            FooterIcon?: CSSProperties;
        };
        Icon?: CSSProperties;
        Label?: CSSProperties;
        EmailError?: {
            text?: string;
            errorStyle?: CSSProperties;
        };
    };
    showFooter?: boolean;
    variation?: string;
    footerText?: string;
    footerLink?: string;
}
export declare const CrossSelling: ({ questId, userId, token, heading, description, shareButtonText, gradientBackground, primaryHeading, primaryDescription, showDays, expiryDate, isEmail, claimRewardHandler, backButtonTrigger, uniqueEmailId, uniqueUserId, styleConfig, BrandTheme, QuestThemeData, showFooter, footerText, variation, Icon, footerLink }: referProp) => import("react/jsx-runtime").JSX.Element;
export {};
