import { CSSProperties } from 'react';
import { GeneralFeedbackContentStyleConfig } from '../components/FeedbackWorkflowApi';
interface FeatureContentProps {
    formdata: any;
    handleSubmit: () => void;
    handleUpdate: (e: any, id: string, j: string, k?: number) => void;
    answer: any;
    handleRemove: ((e: any) => void) | undefined;
    buttonStyle?: CSSProperties;
    PrimaryButtonText?: string;
    ratingStyle?: "Star" | "Numbers" | "Smiles";
    labelStyle?: CSSProperties;
    StarStyle?: {
        Style?: React.CSSProperties;
        PrimaryColor?: string;
        SecondaryColor?: string;
        Size?: number;
    };
    isVisible: boolean | undefined;
    setIsVisible: Function | undefined;
    screenshot: FileProp | null | undefined;
    onStartCapture: () => void;
    setScreenshot: ((screenshot: FileProp | null) => void) | undefined;
    uploadFileToBackend: (file: any) => any;
    inputRef: React.MutableRefObject<HTMLInputElement | null>;
    file: FileProp | null;
    setFile: (file: FileProp | null) => any;
    styleConfig?: GeneralFeedbackContentStyleConfig;
    BrandTheme?: BrandTheme;
    rating: number;
    setRating: (rating: number) => void;
    starBorderColor?: string;
}
interface FileProp {
    name: string;
    size: number;
    type: string;
    lastModified: number;
    webkitRelativePath: string;
}
type BrandTheme = {
    accentColor?: string;
    background?: string;
    borderRadius?: string;
    primaryButton?: string;
    secondaryButton?: string;
    contentColor?: string;
    fontFamily?: string;
    logo?: string;
    primaryColor?: string;
    secondaryColor?: string;
    tertiaryColor?: string;
    titleColor?: string;
};
declare const FeatureContent: React.FC<FeatureContentProps>;
export default FeatureContent;
