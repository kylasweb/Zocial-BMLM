import { Dispatch, SetStateAction } from 'react';
import { ThemeManager } from '../components/ThemeManger';
import { Headers, FormData, SelectedOptions, Answer, QuestThemeData } from '../types/GamifiedQuiz.type';
import { default as General } from '../../../../general';
interface GamifiedQuizContextType {
    themeManager: ThemeManager;
    heading?: string;
    Headers?: Headers[];
    currentSection: number;
    setCurrentSection: Dispatch<SetStateAction<number>>;
    sectionNo: number;
    setSectionNo: Dispatch<SetStateAction<number>>;
    totalSectionsPerSectionQuestion: number;
    design: number[][];
    formdata: FormData[];
    answer: Answer;
    handleUpdate: (id: string, value: any, extra: string) => void;
    handleCheckboxChange: (value: string, actionId: string) => void;
    handleRadioChange: (value: string, actionId: string, extra?: string) => void;
    handleRatingChange: (id: string, value: number) => void;
    formSubmitHandler: () => void;
    goToNextSection: boolean;
    selectedOptions: SelectedOptions;
    setGamifiedQuiz: Dispatch<SetStateAction<boolean>>;
    newId: string;
    isV1Api?: boolean;
    GeneralFunctions: General;
    translatedData?: any[];
    translatedHeader?: string;
    translatedButton?: string;
    singleChoiceModal?: "modal1" | "modal2" | "modal3";
    multiChoiceModal?: "modal1" | "modal2";
    ratingType?: string;
    footerText?: string;
    footerLink?: string;
    questThemeData?: QuestThemeData;
}
export declare const GamifiedQuizContext: import('react').Context<GamifiedQuizContextType | undefined>;
export declare const useGamifiedQuiz: () => GamifiedQuizContextType;
export {};
