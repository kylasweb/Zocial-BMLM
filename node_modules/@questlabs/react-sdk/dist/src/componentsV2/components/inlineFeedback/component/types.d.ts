import { CSSProperties } from 'react';
import { BrandTheme, QuestThemeData } from '../../Survey/types/SurveyTypes';
interface StyleConfig {
    Form?: CSSProperties;
    MainHeading?: CSSProperties;
    Heading?: CSSProperties;
    Description?: CSSProperties;
    ActionContainer?: CSSProperties;
    ActionButton?: CSSProperties;
    ActionSelectedButton?: CSSProperties;
    Footer?: CSSProperties;
    IconStyle?: CSSProperties;
    SelectedIconStyle?: CSSProperties;
    closeIconColor?: string;
}
export interface FeedbackProps {
    heading?: string;
    description?: string;
    type?: "number" | "emoji" | "like" | "star";
    count?: number;
    styleConfig?: StyleConfig;
    onChange?: (data: object) => void;
    userId?: string;
    questId: string;
    token?: string;
    onRequestClose?: () => void;
    initialState?: number;
    variation?: string;
    Headers?: Headers[] | undefined;
    footerText?: string;
    footerLink?: string;
    uniqueEmailId?: string;
    uniqueUserId?: string;
}
interface Headers {
    heading?: string;
    subHeading?: string;
}
export interface FeedbackPropsOffline {
    heading?: string;
    description?: string;
    type?: "number" | "emoji" | "like" | "star";
    count?: number;
    styleConfig?: StyleConfig;
    onChange?: (data: object) => void;
    onRequestClose?: () => void;
    initialState?: number;
    offlineFormData?: any;
    setAnswer?: any;
    closeIconColor?: string;
    Headers?: Headers[] | undefined;
    footerText?: string;
    footerLink?: string;
    BrandTheme?: BrandTheme;
    QuestThemeData?: QuestThemeData;
}
export interface FeedBackComponentProps {
    onChange: (data: object) => void;
    count: number;
    style?: CSSProperties;
    buttonStyle?: CSSProperties;
    selectedButtonStyle?: CSSProperties;
    iconStyle?: CSSProperties;
    selectedIconStyle?: CSSProperties;
    initialState?: number;
}
export {};
