import { CSSProperties, ChangeEventHandler, KeyboardEventHandler, RefObject, ReactNode } from 'react';
declare const LogoType: {
    email: (iconColor: string) => import("react/jsx-runtime").JSX.Element;
    phone: (iconColor: string) => import("react/jsx-runtime").JSX.Element;
    text: () => import("react/jsx-runtime").JSX.Element;
    number: (iconColor: string) => import("react/jsx-runtime").JSX.Element;
    date: (iconColor?: string) => import("react/jsx-runtime").JSX.Element;
};
export type logoType = keyof typeof LogoType;
interface PropType {
    placeholder?: string;
    style?: CSSProperties | undefined;
    onChange?: ChangeEventHandler<HTMLInputElement> | undefined;
    onKeyUp?: KeyboardEventHandler<HTMLInputElement> | undefined;
    onKeyDown?: KeyboardEventHandler<HTMLInputElement> | undefined;
    iconColor?: string;
    value?: string;
    logoPosition?: "left" | "right" | "both";
    ref?: RefObject<HTMLInputElement>;
    emailErrorStyle?: CSSProperties | undefined;
    emailtext?: string;
    required?: boolean;
    regexKey?: string | undefined;
    regexMessage?: string;
    name?: string;
    preventFutureSelection?: boolean;
    preventPastSelection?: boolean;
    children?: ReactNode;
    className?: string;
    key?: string | number | undefined;
    validateInputRegex?: (validated: boolean) => void;
}
export declare const EmailInputModule: ({ placeholder, onChange, iconColor, value, onKeyUp, onKeyDown, ref, logoPosition, emailErrorStyle, emailtext, required, regexKey, regexMessage, name, preventFutureSelection, preventPastSelection, key, style, validateInputRegex }: PropType) => import("react/jsx-runtime").JSX.Element;
export {};
