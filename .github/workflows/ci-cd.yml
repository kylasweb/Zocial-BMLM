name: CI/CD Pipeline

on:
  push:
    branches: [ main, staging, development ]
  pull_request:
    branches: [ main, staging, development ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with report
        run: |
          npm run lint:report || true
          if [ -f lint-report.json ]; then
            echo "Lint issues found:"
            cat lint-report.json
            echo "Running detailed lint check..."
            npm run lint
          fi

      - name: Run tests
        run: npm test

      - name: Upload lint report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint-report.json
          retention-days: 5

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies and Netlify plugins
        run: |
          npm ci
          npm install -D @netlify/plugin-lighthouse netlify-plugin-cache netlify-plugin-submit-sitemap netlify-plugin-checklinks
      
      - name: Build
        run: |
          # Fetch environment variables from admin dashboard
          node scripts/fetch-env.js ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
          npm run build
        env:
          ADMIN_API_TOKEN: ${{ secrets.ADMIN_API_TOKEN }}
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
          retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10
